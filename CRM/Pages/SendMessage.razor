@page "/sendmessage"

@attribute [Authorize]
@inherits OwningComponentBase<CustomerService>
@inject CustomerService customerService
@inject IJSRuntime jsRuntime

<h3>ارسال پیام</h3>

<style type="text/css">
    p {
        width: 100% !important;
        text-align: right !important;
        font-weight: normal !important;
        font-size: 11pt !important;
    }

    .step {
        padding: 20px 0px;
    }

        .step, .step div, .step span {
            text-align: center;
            clear: both;
        }

            .step span {
                color: #bbb;
                width: 100%;
                text-align: center;
            }

    .stepCircle {
        border: 1px solid #666;
        color: #666;
        border-radius: 13px;
        height: 26px;
        width: 26px;
        font-size: 1rem;
        margin: 0px auto;
    }

    .stepCircleCurrent {
        color: blue !important;
    }

    .stepCircle.stepCircleCurrent {
        border: 1px solid blue;
        color: blue;
    }

    .stepCirclePassed {
        color: green !important;
    }

    .stepCircle.stepCirclePassed {
        border: 1px solid green;
        color: green;
    }

    .stepSpace {
        height: 100px;
        text-align: center;
        width: 2px;
        margin: 0px auto;
    }

        .stepSpace span {
            height: 100px;
            width: 2px;
            border-right: 1px solid #bbb;
        }

    .body {
        width: 100% !important;
        clear: both;
    }

    .bodyHide {
        display: none;
    }
</style>

<div class="row">
    <div class="col-md-2" style="border-left: 1px solid #bbb;">
        <div class="row step">
            <div class="stepCircle @step1CSSClass">۱</div>
            <span class="@step1CSSClass">انتخاب گیرندگان پیام</span>
        </div>
        <div class="row stepSpace">
            <span></span>
        </div>
        <div class="row step">
            <div class="stepCircle @step2CSSClass">۲</div>
            <span class="@step2CSSClass">متن پیام</span>
        </div>
        <div class="row stepSpace">
            <span></span>
        </div>
        <div class="row step">
            <div class="stepCircle @step3CSSClass">۳</div>
            <span class="@step3CSSClass">ارسال</span>
        </div>
    </div>

    <div class="col-md-10" style="padding-right:55px;">
        @if (customers == null)
        {
            <p><em>درحال فراخوانی اطلاعات...</em></p>
        }
        else if (!customers.Any())
        {
            <p><em>هیچ مشتری ثبت نشده است</em></p>
        }
        else
        {
            <div class="row body @body1CSSClass">
                <div class="row body" style="direction:ltr;">
                    <button type="button" @onclick="ConfirmSelectCustomers" title="ادامه" class="btn btn-primary">
                        <i class="fas fa-angle-left"></i>
                        ادامه
                    </button>
                </div>
                <div class="row body" style="min-height: 20px;"></div>
                <div class="row body">
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th><strong>انتخاب</strong></th>
                                <th><strong>شناسه</strong></th>
                                <th><strong>نام و نام خانوادگی</strong></th>
                                <th><strong>تلفن همراه</strong></th>
                                <th><strong>پست الکترونیک</strong></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var customerRecord in customers)
                            {
                                <tr>
                                    @*@bind-value="customerRecord.IsSelected"*@
                                    @*<td><input type="checkbox" class="form-check-input" @onchange="SelectCustomer(customerRecord.Id)" /></td>*@
                                    <td><input type="checkbox" class="form-check-input" @onchange="(() => SelectCustomer(customerRecord.Id))" /></td>
                                    <td>@customerRecord.Id</td>
                                    <td>@customerRecord.FullName</td>
                                    <td>@customerRecord.CellPhone</td>
                                    <td>@customerRecord.Email</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>

                        </tfoot>
                    </table>
                </div>
                <div class="row body">
                    <p class="align-items-end">تعداد گیرندگان انتخاب شده: @selectedCustomersCount</p>
                </div>
            </div>

            <div class="row body @body2CSSClass">
                <div class="row body" style="direction:ltr;">
                    <button type="button" @onclick="ConfirmCreateMessage" title="ادامه" class="btn btn-primary">
                        <i class="fas fa-angle-left"></i>
                        ادامه
                    </button>
                    <button type="button" @onclick="CancelCreateMessage" title="بازگشت" class="btn btn-warning ml-2">
                        بازگشت
                        <i class="fas fa-angle-right"></i>
                    </button>
                </div>
                <div class="row body" style="min-height: 20px;"></div>
                <div class="row body">
                    <textarea placeholder="متن پیام" class="form-control" style="min-height: 300px;" @bind="messageText" />
                </div>
                <div class="row body">
                    <span>تعداد پیامک: @messageSMSCount</span>
                </div>
            </div>

            <div class="row body @body3CSSClass">
                <div class="row body" style="direction:ltr;">
                    <button type="button" @onclick="ConfirmSendMessage" title="ارسال پیام" class="btn btn-success">
                        <i class="fas fa-check"></i>
                        ارسال 
                    </button>
                    <button type="button" @onclick="CancelSendMessage" title="بازگشت" class="btn btn-warning ml-2">
                        بازگشت
                        <i class="fas fa-angle-right"></i>
                    </button>
                </div>
                <div class="row body" style="min-height: 20px;"></div>
                <div class="row body">
                    <div class="row body" style="text-align: left;">
                        <p>تعداد گیرندگان انتخاب شده: @selectedCustomersCount</p>
                        <br/>
                        <p>تعداد کل پیام‌ها: @messageTotalCount</p>
                    </div>
                    <div class="row body">
                        <p>متن پیام: </p>
                        <br />
                        <p>@messageText</p>
                    </div>
                    <div class="row body" style="min-height: 20px;"></div>
                    <div class="row body">
                        <p>@smsResponse</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {

    #region Properties

    private string step1CSSClass;
    private string step2CSSClass;
    private string step3CSSClass;
    private string body1CSSClass;
    private string body2CSSClass;
    private string body3CSSClass;

    private int rowIndex = 0;
    private int totalRecords = 0;
    private int totalPages = 0;
    private int currentPage = 1;

    private int[] selectedCustomers;
    private int selectedCustomersCount;

    private string messageText;
    private int messageSMSCount;
    private int messageTotalCount;
    private string smsResponse;

    private List<CustomerViewModel> customers = new List<CustomerViewModel>();
    private CustomerViewModel customer = new CustomerViewModel();

    protected override async Task OnInitializedAsync()
    {
        await GetAllTableRecords();

        step1CSSClass = "stepCircleCurrent";
        step2CSSClass = string.Empty;
        step3CSSClass = string.Empty;

        body1CSSClass = string.Empty;
        body2CSSClass = "bodyHide";
        body3CSSClass = "bodyHide";


    }

    #endregion

    #region Step 1 - Select Customers

    private async Task GetAllTableRecords()
    {
        var customersList = await customerService.GetCustomersAsync(currentPage, 10);
        customers = customersList.Customers;
        totalRecords = customersList.TotlaCount;
        rowIndex = 0;
        totalPages = (totalRecords % 10) > 0
            ? (totalRecords / 10) + 1
            : totalRecords / 10;
    }

    private void SelectCustomer(int CustomerId)
    {
        var selectedCustomer = customers.FirstOrDefault(x => x.Id == CustomerId);
        selectedCustomer.IsSelected = !selectedCustomer.IsSelected;

        selectedCustomers = customers.Where(x => x.IsSelected).Select(x => x.Id).ToArray();
        selectedCustomersCount = selectedCustomers.Count();
    }

    private async Task ConfirmSelectCustomers()
    {
        #region Confirm Select Customers

        selectedCustomers = customers.Where(x => x.IsSelected).Select(x => x.Id).ToArray();
        selectedCustomersCount = selectedCustomers.Count();

        step1CSSClass = "stepCirclePassed";
        step2CSSClass = "stepCircleCurrent";
        step3CSSClass = string.Empty;

        body1CSSClass = "bodyHide";
        body2CSSClass = string.Empty;
        body3CSSClass = "bodyHide";

        #endregion
    }

    #endregion

    #region Step 2 - Create Message

    private async Task ConfirmCreateMessage()
    {
        #region Confirm Create Message

        step1CSSClass = "stepCirclePassed";
        step2CSSClass = "stepCirclePassed";
        step3CSSClass = "stepCircleCurrent";

        body1CSSClass = "bodyHide";
        body2CSSClass = "bodyHide";
        body3CSSClass = string.Empty;

        messageSMSCount = messageText.ToCharArray().Count() % 70 > 0
                                ? (messageText.ToCharArray().Count() / 70) + 1
                                : messageText.ToCharArray().Count() / 70;

        messageTotalCount = messageSMSCount * selectedCustomersCount;

        #endregion
    }

    private async Task CancelCreateMessage()
    {
        #region Cancel Create Message

        step1CSSClass = "stepCircleCurrent";
        step2CSSClass = string.Empty;
        step3CSSClass = string.Empty;

        body1CSSClass = string.Empty;
        body2CSSClass = "bodyHide";
        body3CSSClass = "bodyHide";

        #endregion
    }

    #endregion

    #region Step 3 - Send

    private async Task ConfirmSendMessage()
    {
        #region Confirm Send Message

        //Send Message

        smsResponse = string.Empty;

        var recipients = string.Empty;

        var selectedCustomers =
                    customers
                    .Where(x => x.IsSelected && !string.IsNullOrEmpty(x.CellPhone))
                    .ToList();

        foreach (var recipient in selectedCustomers)
        {
            recipients += "\"" + recipient.CellPhone.Trim() + "\"";

            if (recipient.Id != selectedCustomers.Last().Id)
            {
                recipients += ", ";
            }
        }


        var client = new RestClient("http://188.0.240.110/api/select");
        var request = new RestRequest(Method.POST);
        request.AddHeader("cache-control", "no-cache");
        request.AddHeader("Content-Type", "application/json");
        request.AddParameter("undefined", "{\"op\" : \"send\"" +
                            ",\"uname\" : \"09122687870\"" +
                            ",\"pass\":  \"@Namadin@1398\"" +
                            ",\"message\" : \"" + messageText + "\"" +
                            ",\"from\": \"5000125475\"" +
                            ",\"to\" : [" + recipients + "]" +
                            "}"
                            , ParameterType.RequestBody);
        IRestResponse response = client.Execute(request);

        var responseCode = response.Content.Split(',')[0].Replace("[", "").Trim();
        var responseMessage = response.Content.Split(',')[0].Replace("[", "").Trim();

        if (responseCode == "0")
        {
            smsResponse = "پیام با موفقیت ارسال شد";
        }
        else
        {
            smsResponse = "پیام ارسال نشد، کد خطا: " + responseCode + " - شرح خطا: " + responseMessage;
        }

        #endregion
    }

    private async Task CancelSendMessage()
    {
        #region Cancel Send Message

        step1CSSClass = "stepCirclePassed";
        step2CSSClass = "stepCircleCurrent";
        step3CSSClass = string.Empty;

        body1CSSClass = "bodyHide";
        body2CSSClass = string.Empty;
        body3CSSClass = "bodyHide";

        #endregion
    }

    #endregion
}
